plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'org.penekhun'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-security:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.4'

    // 데이터 베이스 연결
    implementation 'mysql:mysql-connector-java:8.0.33'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // 롬북
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // 유효성 검사
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    // 개발 편의
    developmentOnly 'org.springframework.boot:spring-boot-devtools:3.0.4'

    /* 테스트 */
    testImplementation 'org.testcontainers:junit-jupiter:1.17.6'
    testImplementation 'org.springframework.security:spring-security-test:6.0.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.0'
    // Fixture Monkey
    testImplementation("com.navercorp.fixturemonkey:fixture-monkey-starter:0.6.11")
    testImplementation("com.navercorp.fixturemonkey:fixture-monkey-jakarta-validation:0.6.8")
    // REST Docs
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

tasks.named('test') {
    useJUnitPlatform()
}

ext { // 전역 변수
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'

    sources {
        // index.adoc 파일만 html로 변환
        include '**/index.adoc'
    }
    baseDirFollowsSourceFile() // 다른 adoc 파일을 include 할 때 경로를 baseDir로 맞춘다.
    dependsOn test // 테스트 후에 실행 되겠끔 설정
}

bootJar {
    dependsOn asciidoctor // test -> asciidoctor -> bootJar 순으로 실행
    from("${asciidoctor.outputDir}") {
        into 'static/docs' // build/generated-snippets 에 있는 파일들을 static/docs 에 복사
    }
    archiveFileName = 'wanted2023.jar'
}
